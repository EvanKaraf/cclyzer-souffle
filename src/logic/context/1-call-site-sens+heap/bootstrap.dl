//---------------------------------------------------------
// Empty Contexts
//---------------------------------------------------------

// Generic empty context
//dummy_context_item_by_str("<<empty-context>>", ?ctxItem).

.decl empty_context(?ctx:Context)
empty_context(?ctx)
 , context(?ctx)
 , context_request(?ctxItem,?ctxItem,?ctxItem)
 , context_response(?ctxItem,?ctxItem,?ctxItem,?ctx)
 :-
   dummy_context_item_by_str("<<empty-context>>", ?ctxItem),
   ?ctx=?ctxItem.

.decl empty_alloc_context(?ctx:AllocationContext)
empty_alloc_context(?aCtx)
 , alloc_context(?aCtx)
 , alloc_context_new(?ctxItem, ?aCtx)
 :-
   dummy_context_item_by_str("<<empty-context>>", ?ctxItem),
   ?aCtx=?ctxItem.

// Special context for when called from main
//context_item(CtxItem)
// , dummy_context_item:by_str["<<main-context>>"] = CtxItem <- .

.decl main_context(?ctx:Context)
main_context(?ctx)
 , context(?ctx)
 , context_request(?ctxItem,?ctxItem,?ctxItem)
 , context_response(?ctxItem,?ctxItem,?ctxItem,?ctx)
 :-
   dummy_context_item_by_str("<<main-context>>", ?ctxItem),
   ?ctx=?ctxItem.

// Special context for when called at startup
//context_item(CtxItem)
// , dummy_context_item:by_str["<<startup-context>>"] = CtxItem <- .

.decl startup_context(?ctx:Context)
startup_context(?ctx)
 , context(?ctx)
 , context_request(?ctxItem,?ctxItem,?ctxItem)
 , context_response(?ctxItem,?ctxItem,?ctxItem,?ctx)
 :-
   dummy_context_item_by_str("<<startup-context>>", ?ctxItem),
   ?ctx=?ctxItem.

// Special context for when called at exit
//context_item(CtxItem)
// , dummy_context_item:by_str["<<exit-context>>"] = CtxItem <- .


.decl exit_context(?ctx:Context)
exit_context(?ctx)
 , context(?ctx)
 , context_request(?ctxItem,?ctxItem,?ctxItem)
 , context_response(?ctxItem,?ctxItem,?ctxItem,?ctx)
 :-
   dummy_context_item_by_str("<<exit-context>>", ?ctxItem),
   ?ctx=?ctxItem.


//---------------------------------------------------------
// Bootstrap the analysis
//---------------------------------------------------------

.decl reachable_context(?ctx:Context, ?func:FunctionDecl)


context(?ctx):-
   reachable_context(?ctx,?item).

reachable_context(?ctx, ?func) :-
   main_function(?func),
   main_context(?ctx).

reachable_context(?ctx, ?func) :-
   called_at_startup(?func),
   startup_context(?ctx).

reachable_context(?ctx, ?func) :-
   called_at_exit(?func),
   exit_context(?ctx).

reachable_function(?func) :-
   reachable_context(_, ?func).
