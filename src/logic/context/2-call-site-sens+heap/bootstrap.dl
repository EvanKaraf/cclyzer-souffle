//---------------------------------------------------------
// Empty Contexts
//---------------------------------------------------------

// Generic empty context
//dummy_context_item_by_str("<<empty-context>>", ?ctxItem).

.decl empty_context(?ctx:Context)
empty_context(?ctx)
 , context(?ctx)
 :-
   ?ctx=["<<empty-context>>", "<<empty-context>>"].

.decl empty_acontext(?ctx:AContext)
empty_acontext(?actx)
 , acontext(?actx)
 , acontext_new(?actx, ?actx)
 :-
   ?actx="<<empty-context>>".

// Special context for when called from main
//context_item(CtxItem)
// , dummy_context_item:by_str["<<main-context>>"] = CtxItem <- .

.decl main_context(?ctx:Context)
main_context(?ctx)
 , context(?ctx)
 :-
   ?ctx=["<<main-context>>", "<<main-context>>"].

// Special context for when called at startup
//context_item(CtxItem)
// , dummy_context_item:by_str["<<startup-context>>"] = CtxItem <- .

.decl startup_context(?ctx:Context)
startup_context(?ctx)
 , context(?ctx)
 :-
   ?ctx=["<<startup-context>>", "<<startup-context>>"].

// Special context for when called at exit
//context_item(CtxItem)
// , dummy_context_item:by_str["<<exit-context>>"] = CtxItem <- .


.decl exit_context(?ctx:Context)
exit_context(?ctx)
 , context(?ctx)
 :-
   ?ctx=["<<exit-context>>", "<<exit-context>>"].


//---------------------------------------------------------
// Bootstrap the analysis
//---------------------------------------------------------

.decl reachable_context(?ctx:Context, ?func:FunctionDecl)

reachable_context(?ctx, ?func) :-
   main_function(?func),
   main_context(?ctx)
 ; called_at_startup(?func),
   startup_context(?ctx)
 ; called_at_exit(?func),
   exit_context(?ctx).

reachable_function(?func) :-
   reachable_context(_, ?func).
